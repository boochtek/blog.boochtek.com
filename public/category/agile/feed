<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Agile &#8211; BoochTek, LLC</title>
	<atom:link href="http://blog.boochtek.com/category/agile/feed" rel="self" type="application/rss+xml" />
	<link>http://blog.boochtek.com</link>
	<description>Web Development, Ruby on Rails, Open Source</description>
	<lastBuildDate>Thu, 07 Jul 2016 04:22:08 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.5.3</generator>
	<item>
		<title>You Don&#8217;t Have to Be Right</title>
		<link>http://blog.boochtek.com/2016/07/06/you-dont-have-to-be-right</link>
		<comments>http://blog.boochtek.com/2016/07/06/you-dont-have-to-be-right#respond</comments>
		<pubDate>Thu, 07 Jul 2016 04:22:08 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>
		<category><![CDATA[Empathy]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=313</guid>
		<description><![CDATA[Not too long ago, I was asked during a job interview &#8220;how do you convince your teammates that you&#8217;re right?&#8221; I answered with probably the most surprising answer: &#8220;I don&#8217;t.&#8221; It&#8217;s taken me years to realize that being right isn&#8217;t terribly important. Especially when there&#8217;s more than one right answer — which there usually is. It&#8217;s &#8230; <a href="http://blog.boochtek.com/2016/07/06/you-dont-have-to-be-right" class="more-link">Continue reading<span class="screen-reader-text"> "You Don&#8217;t Have to Be Right"</span></a>]]></description>
				<content:encoded><![CDATA[<p>Not too long ago, I was asked during a job interview &#8220;how do you convince your teammates that you&#8217;re right?&#8221; I answered with probably the most surprising answer: &#8220;I don&#8217;t.&#8221;</p>
<p>It&#8217;s taken me years to realize that being right isn&#8217;t terribly important. Especially when there&#8217;s more than one right answer — which there usually is. It&#8217;s more important to work as a team. It&#8217;s more important to be respected and to have respect for others.</p>
<p>A few weeks after that interview, I was pair programming with the person who had asked me the question. We&#8217;re both senior developers, so we both have a lot of experience and opinions based on that experience. We were writing a shell script, and we both had an idea in mind about how to write the code. I let him proceed with his idea. It was a pretty good idea; probably better than mine. But we paired very effectively. I&#8217;d let him finish some code, and I&#8217;d find a way to make it better. Then he&#8217;d find a way to make my code better. What we ended up with was so much better than my original idea, and his original idea as well. I commented on this, and he agreed. We left that pairing session feeling the high of having accomplished something rare — two very experience programmers coming up with better code than we could have imagined going in.</p>
<p>I like to think of writing code as a path towards a destination. The destination is good code that does what it&#8217;s supposed to, is readable (intention revealing), is concise, and is well-factored so as to be easy to change in the future. But there are many paths to that destination. Especially when pair programming, the code gets refined as ideas are shared, getting you closer and closer to that destination. Sometimes the different paths end up with the same code; sometimes they end up with different code. But if the code does its job well (according to those criteria), it doesn&#8217;t really matter what code you ended up with.</p>
<p>Thinking back to the original question, I think the answer is a little more nuanced. (I&#8217;m pretty sure I followed up with an explanation, but I don&#8217;t recall the details.) It truly doesn&#8217;t matter in a lot of cases. If there are different paths that lead to the same destination, and they&#8217;re all roughly equal, then my rule works. It can also work even if the first path you try (a &#8220;wrong&#8221; path) doesn&#8217;t work out, as long as it&#8217;s easy enough to try a different path. I find that the majority of day-to-day coding fits these conditions.</p>
<p>But there are some places where it&#8217;s costly to get things wrong the first time. In these cases, it&#8217;s worth spending some time thinking about and discussing the alternatives before getting started. Software architecture is the big one that comes to mind. In general, weighing the pros and cons of each option and applying previous experience works best.</p>
<p>So next time you think about trying to convince someone you&#8217;re right, fight the urge. Instead, let them show you what they&#8217;re thinking. They just might surprise you. And more importantly, you might surprise yourself.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2016/07/06/you-dont-have-to-be-right/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>My First Open Space</title>
		<link>http://blog.boochtek.com/2016/02/10/first-open-space</link>
		<comments>http://blog.boochtek.com/2016/02/10/first-open-space#respond</comments>
		<pubDate>Thu, 11 Feb 2016 05:42:54 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=307</guid>
		<description><![CDATA[I recently attended an Open Space hosted at work. I&#8217;d never been to an Open Space, and didn&#8217;t know what to expect. We&#8217;d been told that this was a workshop to help Engineering Managers (my role), Product Owners, and Product Analysts find better ways of working together. But due to the way an Open Space &#8230; <a href="http://blog.boochtek.com/2016/02/10/first-open-space" class="more-link">Continue reading<span class="screen-reader-text"> "My First Open Space"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I recently attended an Open Space hosted at work. I&#8217;d never been to an Open Space, and didn&#8217;t know what to expect. We&#8217;d been told that this was a workshop to help Engineering Managers (my role), Product Owners, and Product Analysts find better ways of working together. But due to the way an Open Space works, it evolved into something completely different — and better.</p>
<p>We&#8217;d brought in Diana Larsen to facilitate the Open Space. Diana is a stalwart of the Agile community, focusing on how people and teams interact. She literally (co-)wrote the book on Agile retrospectives. Diana was also kind enough to be our guest at an Agile LINC meetup later in the evening.</p>
<p>The morning started off with all the participants sitting in chairs arranged in a circle. Diana rang a chime, a nice soothing tone that literally set the tone for the day. (Most people didn&#8217;t seem to like it, but I thought it had its purpose.) It also acted as a call to gather in the meeting space. She then walked around the inside of the circle as she explained what was going to happen.</p>
<p>The idea behind Open Spaces came with the realization that at a conference, the &#8220;hallway track&#8221; (ad hoc discussions in the hallways) was often more valuable than the scheduled talks. So they figured out a way to capture that experience. There are only a few rules:</p>
<ul>
<li>Whoever shows up is the right group</li>
<li>Whatever happens is the only thing that could have</li>
<li>Be prepared to be surprised</li>
<li>Whenever it starts is the right time</li>
<li>When it&#8217;s over, it&#8217;s over</li>
<li>The Law of 2 Feet: If you&#8217;re not learning or contributing, go somewhere else</li>
</ul>
<p>Once Diana set the scene and explained the rules, people came up and presented ideas for topics. If you proposed a topic, you chose a time and location on the topic board. At that time, you&#8217;d facilitate a discussion on that topic. The format was really conducive to discussions. There was no preparation, so discussions were from the heart — lots of people felt that they could contribute.</p>
<p>Being new to the company (only 2 months), I got a lot out of the workshop, beyond the content itself. I got to get to know several more people. I&#8217;d even say I made a few friends. Having open discussions, we found that many of the teams were having the same issues. This made it easy for me to talk to other people.</p>
<p>All-in-all, I found the Open Space to be extremely conducive to discussions aimed at identifying issues, brainstorming solutions, and planning action items. I felt like we made great strides in addressing some of the biggest problems our organization is currently facing.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2016/02/10/first-open-space/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Team Values</title>
		<link>http://blog.boochtek.com/2016/01/04/team-values</link>
		<comments>http://blog.boochtek.com/2016/01/04/team-values#respond</comments>
		<pubDate>Tue, 05 Jan 2016 04:56:46 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>
		<category><![CDATA[Retrospectives]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=294</guid>
		<description><![CDATA[I held a retrospective with my new team last week. The team includes 2 senior developers, 2 junior developers, a product owner, and a product analyst. I&#8217;ve joined the team as an engineering manager, which I think of more as a team lead with an elevated title. Being new to this group, I wanted a &#8230; <a href="http://blog.boochtek.com/2016/01/04/team-values" class="more-link">Continue reading<span class="screen-reader-text"> "Team Values"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I held a retrospective with my new team last week. The team includes 2 senior developers, 2 junior developers, a product owner, and a product analyst. I&#8217;ve joined the team as an engineering manager, which I think of more as a team lead with an elevated title. Being new to this group, I wanted a way to understand their values. What motivates them? What common values do we share that we can leverage to move forward in the same direction?</p>
<p>I started out with a pretty simple question: &#8220;What do you value (in regards to what we&#8217;re building); what are you willing to fight for?&#8221; I asked them each to write down several values and then put them on the board before looking at everyone else&#8217;s answers. I also asked each person to rank their values in order of importance.</p>
<p>It turned out that my question was a little vague. Some people thought about the question in terms of the end result, and some in terms of the process of creating the software. In some ways that was a bit of a problem, because the different interpretations led people in different directions. But in other ways, not pushing them in any particular direction got more varied answers, exposing how they think about the project and the product.</p>
<p>My list (in order) was Effectiveness (doing the right thing), Quality (doing things right the first time), Happiness, Purpose, and Teamwork. In retrospect, I should have put Happiness first. If I&#8217;m not happy at work, I don&#8217;t really want to be there, and need to move on. (Sometimes I can trade some happiness at work for more happiness at home, but I&#8217;m definitely a person that needs to be happy at work.) The other values serve to improve my happiness, but the happiness is more important.</p>
<p>My own issue ranking my values turned out to be a problem with the ranking in general. Should they be ranked in importance of the necessity of the value as an outcome, or in importance of the necessity to focus on the value? I think the former is what I was looking for, but even I wasn&#8217;t clear on that when I began the exercise.</p>
<p>After everyone put their values up on the board, we read them off. Then I asked the team to choose several values that we share as a team. We pulled them off the individual members&#8217; lists, and put them in the team list. Then I asked each person to come up and rank those values, then explain why they had ordered them that way, especially when they ordered them significantly different than the last person. I was hoping to come to some convergence of the rank over time, so we could document our values in rank order. That didn&#8217;t happen. But the discussion was illuminating to me and to everyone on the team.</p>
<p>I think the most interesting part about the lack of convergence was the difference between the developers and the product guys. The product guys definitely viewed the values more in terms of outcomes than the process. That makes sense — they&#8217;re not as intimately involved in the process of building the product.</p>
<p>We were able to converge on the top priority though: Will the user buy the product? This was a combination of a couple different values that we merged together. This included the end user experience as well as making sure the team would continue to have a reason for existing. The rest of the values we left unordered: <span class="s1">Teamwork (cohesiveness), Data driven decisions, Team ownership, Simplicity, Effectiveness, Maintainability / Supportability, Quality, Automation, and Performance. I think that&#8217;s a pretty decent list.</span></p>
<p><span class="s1">As a couple teammates pointed out, those values are probably in part a reflection of this current point in time. If I asked the same question some other time, under different conditions and team dynamics, the answers would probably change a bit. And we&#8217;d probably come up with other answers if asked again, just due to randomness of the way we think about these things.</span></p>
<p>But I don&#8217;t think I&#8217;d do this activity a second time with the team. It was really about understanding our motivations — both our own, and those of our teammates. I found it effective in that way, and also in helping the team to think about our culture and how we can work to shape it to help us all push in the same direction.</p>
<p>There are a few caveats. When I asked for feedback on the exercise, one teammate pointed out that it wouldn&#8217;t work if people weren&#8217;t honest about their values, and they answered with what they thought management or their teammates wanted to hear. I don&#8217;t think that was an issue with this group, but it&#8217;s something to keep in mind.</p>
<p>The other major thing I&#8217;d do is to make it clear up front that I&#8217;m not looking for any action items from this activity; it&#8217;s more about understanding each other and ourselves. And next time, I&#8217;ll work to clarify how to rank the values.</p>
<p>I would recommend this activity for a new team, or when the makeup of the team is changing in some significant way. I wish there was a way to help a team converge on the ranking of their values, but I suppose I should be happy that agreeing on the set of important values went pretty quickly. And the diversity of ideas and opinions is probably a blessing that I should be embracing — the more ideas we have, the wider the variety of solutions we can imagine.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2016/01/04/team-values/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>2015 Year in Review</title>
		<link>http://blog.boochtek.com/2015/12/28/year-in-review-2015</link>
		<comments>http://blog.boochtek.com/2015/12/28/year-in-review-2015#respond</comments>
		<pubDate>Tue, 29 Dec 2015 05:28:38 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Blogging]]></category>
		<category><![CDATA[Brilliant]]></category>
		<category><![CDATA[Languages]]></category>
		<category><![CDATA[Resolutions]]></category>
		<category><![CDATA[Retrospectives]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=287</guid>
		<description><![CDATA[It&#8217;s that time of year again — time for a retrospective on how I did on my goals for the year. I had 5 main goals for 2015: Job Hunting Conferences Blogging Programming Language Design Writing an Agile Book Job Hunting I got pretty lucky on this one. My main contract with Mercy got extended several times. Amos and &#8230; <a href="http://blog.boochtek.com/2015/12/28/year-in-review-2015" class="more-link">Continue reading<span class="screen-reader-text"> "2015 Year in Review"</span></a>]]></description>
				<content:encoded><![CDATA[<p>It&#8217;s that time of year again — time for a retrospective on how I did on <a href="http://blog.boochtek.com/2015/02/02/resolutions">my goals</a> for the year. I had 5 main goals for 2015:</p>
<ul>
<li>Job Hunting</li>
<li>Conferences</li>
<li>Blogging</li>
<li>Programming Language Design</li>
<li>Writing an Agile Book</li>
</ul>
<h2>Job Hunting</h2>
<p>I got pretty lucky on this one. My main contract with <a href="https://www.mercy.net/">Mercy</a> got extended several times. <a href="https://twitter.com/adkron">Amos</a> and I must have been doing a good job of keeping the customer happy. We even made it through a couple rounds of layoffs. I&#8217;m wrapping up the gig at Mercy now. I&#8217;m working one day a week there, as the project winds down.</p>
<p>I also started a new gig this month at <a href="https://www.ctl.io/">CenturyLink</a>. I&#8217;m working on a cloud development team. Our current project involves selling <a href="https://www.ctl.io/wordpress/">WordPress as a service</a>. The manager had been courting me for most of the year. I&#8217;m excited about my new role; I&#8217;ll be writing about it in a blog post soon.</p>
<h2>Conferences</h2>
<p>I set a goal in 2014 to give my first conference talk. I accomplished that, giving <a href="http://confreaks.tv/videos/rubyconf2014-ruby-idioms-you-re-not-using-yet">an ambitious talk</a> at <a href="http://confreaks.tv/events/rubyconf2014">RubyConf</a>. I enjoyed having done that, and vowed to do more conference speaking.</p>
<p>I gave 3 conference talks in 2015. I gave a <a href="https://www.youtube.com/watch?v=kmfUfjpDpz0">workshop</a> on <a href="https://rawgit.com/booch/presentations/master/HTTP_Exploration/slides.html#1">HTTP</a> at RailsConf. I <a href="http://tinyurl.com/madruby-ii">talked</a> about <a href="https://www.youtube.com/watch?v=F6MZi9OlW1Q">immutable infrastructure</a> at Madison+ Ruby. At RubyConf, I gave a talk <a href="https://www.youtube.com/watch?v=MZVSK4cjeF4">on a micro-ORM</a> <a href="https://github.com/boochtek/ruby_preserves">I wrote</a>. I also gave a <a href="https://rawgit.com/booch/presentations/master/No_Estimates/slides.html#1">lightning talk</a> about Agile estimation (#noestimates).</p>
<p>I was an alternate speaker at Windy City Rails, but did not give my talk on <a href="https://rawgit.com/booch/presentations/master/Alternatives_to_ActiveRecord/slides.html#1">Alternatives to ActiveRecord</a>. I also went to Strange Loop, mainly to see several friends and acquaintances speak.</p>
<h2>Blogging</h2>
<p>I wrote 24 blog articles this year. That&#8217;s about one every other week. What really kept me going was participating in a <a href="https://github.com/booch/pact#readme">writing pact</a>. When the pact was going, I had a 75% blogging rate. That&#8217;s pretty good.</p>
<p>I&#8217;m not so sure about the quality of my blog writing though. I know that practicing writing is supposed to make you better. I know I wrote some really good articles over the past year, but I think I also wrote some articles that weren&#8217;t very good. I think sometimes the deadline has caused more harm than good. I&#8217;m not really sure what to do about that; perhaps just pushing on is the right answer.</p>
<h2>Programming Language Design</h2>
<p>I&#8217;ve taken a lot of notes on the design of my programming language. Any time I learn something interesting about another language, or come up with another idea, I write it down.</p>
<p>But I haven&#8217;t worked on the implementation. (I last worked on the implementation in 2014.) I should be experimenting with some ideas, implementing them to see how they work out. I&#8217;ve even kicked around the idea of starting with a Forth variant, just to get something working quickly.</p>
<p>I haven&#8217;t written any articles on my ideas this year either. My notes are pretty extensive, and it would be good to write some articles to help get my thoughts straight.</p>
<h2>Writing an Agile Book</h2>
<p>I&#8217;ve got some things to say about Agile, and want to write a book to express those ideas. I&#8217;ve made a start — I&#8217;ve got the chapters outlines, and have started on a few chapters. But I haven&#8217;t made as much progress as I&#8217;d like to. I shared what I&#8217;ve got with Amos, and he showed some interest in pairing with me on the writing. Hopefully we&#8217;ll work on it together in 2016 and publish it.</p>
<h2>Other</h2>
<p>There were a few other accomplishments that weren&#8217;t explicitly on my list, but I&#8217;d like to call attention to.</p>
<p>I&#8217;ve continued participating on the <a href="http://www.thisagilelife.com/">This Agile Life</a> podcast. I was in 12 of the 33 episodes that were recorded in 2015. I hope to participate in more in 2016. We&#8217;re considering scheduling a standard recording night each week, which might help us record more regularly.</p>
<p>I recently took over as maintainer of <a href="https://github.com/solnic/virtus#readme">Virtus</a>, a library to declare attributes for Ruby model classes. I haven&#8217;t done a lot yet, since I&#8217;ve been busy with travel, vacation, and holidays. But I hope to catch up with all the pending pull requests and issues in the next month or so.</p>
<p>The accomplishment I&#8217;m most proud of is mentoring for the <a href="http://royclaysr.com/">Roy Clay Sr. Tech Impact</a> program. This is a program begun as a result of the Ferguson protest movement. We&#8217;re helping teach kids (from 14 to 25) web design and development. My personal goal was to give these kids an opportunity that they would not have otherwise had. But it turned out that some of them have actually started a business building web sites for small companies. I&#8217;m so proud of the progress they&#8217;ve made in such a short time; it&#8217;s a challenging program.</p>
<h2>Conclusion</h2>
<p>I&#8217;m pretty happy with my accomplishments this year. I made at least some progress on each of the goals I set. I&#8217;ve been thinking about my goals for next year; I&#8217;ll write that as a separate blog article next week.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/12/28/year-in-review-2015/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Face Your Fears</title>
		<link>http://blog.boochtek.com/2015/12/21/face-your-fears</link>
		<comments>http://blog.boochtek.com/2015/12/21/face-your-fears#respond</comments>
		<pubDate>Tue, 22 Dec 2015 05:38:29 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=285</guid>
		<description><![CDATA[I&#8217;ve always been someone who faces my fears. I have a moderate case of arachnophobia. I don&#8217;t run away when I see a spider, but it creeps my out when one is crawling on me. When I was in college, I decided to buy a tarantula to attempt to get over my irrational fear of &#8230; <a href="http://blog.boochtek.com/2015/12/21/face-your-fears" class="more-link">Continue reading<span class="screen-reader-text"> "Face Your Fears"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve always been someone who faces my fears.</p>
<p>I have a moderate case of arachnophobia. I don&#8217;t run away when I see a spider, but it creeps my out when one is crawling on me. When I was in college, I decided to buy a tarantula to attempt to get over my irrational fear of spiders. I thought I&#8217;d be able to get more comfortable with the tarantula over time, eventually to the point of letting it crawl on my arm. It didn&#8217;t work. Although I did find that my fear of tarantulas is rational — I got a terrible case of hives just from touching the <a href="https://en.wikipedia.org/wiki/Urticating_hair">urticating hairs</a> that fell off into its water sponge.</p>
<p>Last week, I was on vacation in Mexico. One of the <a href="http://www.xenotes.com/">excursions</a> we took involved jumping in the water a lot. I&#8217;m not a strong swimmer — mostly because I have a hard time closing my nose; I hold my nose when I jump in. We zip-lined into the water a lot. At one point, there was a cliff to dive into the water from. It was about 15 feet above the water. It didn&#8217;t look so far down before jumping. But it felt like a really long way down the first time I jumped from it. It was pretty scary for me. So I did it a second time. There wasn&#8217;t any peer pressure to jump a second time. I literally jumped a second time specifically <strong>because</strong> I was scared.</p>
<p>Fear is a weird thing. Fear is there to protect us. But it&#8217;s there to protect us from the dangers of the African savannah. Most of the things our fears protect us from don&#8217;t exist in our everyday modern lives. So maybe we should work to gain a better understanding of how our fears work, to figure out when to pay attention to them and when to ignore them.</p>
<p>Fortunately, our brain has a good mechanism to help us do this. Our brains basically have <a href="https://en.wikipedia.org/wiki/Thinking,_Fast_and_Slow#Two_systems">2 main processing systems</a>. The first one is for quick reactions. This one involves things that are nearly reflexes. Fear is in this system. The second system is our analytical reasoning system. This system takes longer to process, but is able to take on more information.</p>
<p>Whenever the situation allows us time for both systems to work, we need to listen to them both. We need to listen to our fears, because they&#8217;re there for a reason. But that reason might not pertain to our situation. So we need to realize that, and let the slow analytical system determine if we should ignore our fears.</p>
<p>If we don&#8217;t allow both systems to work, we&#8217;re not taking full advantage of our brains; we&#8217;re not taking full advantage of the situations that life is presenting to us.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/12/21/face-your-fears/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Encouragement</title>
		<link>http://blog.boochtek.com/2015/12/15/encouragement</link>
		<comments>http://blog.boochtek.com/2015/12/15/encouragement#respond</comments>
		<pubDate>Wed, 16 Dec 2015 05:00:22 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=282</guid>
		<description><![CDATA[I&#8217;ve been on vacation the past week, in Cozumel, Mexico. One day, we went on an excursion called Xenotes. A cenote (say-NO-tay) is a sinkhole filled with fresh water. (The &#8220;X&#8221; is to give it a more Mayan-sounding trademarkable name.) We had a lot of fun swimming, kayaking, and zip-lining. A bilingual tour guide led our &#8230; <a href="http://blog.boochtek.com/2015/12/15/encouragement" class="more-link">Continue reading<span class="screen-reader-text"> "Encouragement"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve been on vacation the past week, in Cozumel, Mexico. One day, we went on an excursion called Xenotes. A cenote (say-NO-tay) is a sinkhole filled with fresh water. (The &#8220;X&#8221; is to give it a more Mayan-sounding trademarkable name.) We had a lot of fun swimming, kayaking, and zip-lining. A bilingual tour guide led our group, which consisted of people from across the US and South America, of various ages and physical abilities.</p>
<p>Our tour guide was a lot of fun. He made jokes, told us about the cenotes, and led us in the activities. But he also encouraged us. When someone was scared to do something, he was supportive. He told us that it was okay, and we could do it. But we also felt like it was OK to fail, if we really couldn&#8217;t. It really felt like his encouragement was literally creating courage.</p>
<p><span style="font-weight: 300;">What was really neat was that despite the language barrier, everyone else was also supportive and encouraging. Everyone cheered with encouragement before someone would attempt something difficult. And we&#8217;d cheer especially loud once someone accomplished something that was difficult for their abilities.</span></p>
<p>It was an awesome feeling to feel so supported. It made me feel like I was in a safe place, where I could try new things that were a little past my comfort zone. I was able to do the zip-line upside-down. I jumped off a 15-foot cliff into the water. I even jumped off the cliff a second time, even though I was a little scared.</p>
<p>Back at the resort, we played some volleyball in the pool. It was a similar situation, with players of varying ages and abilities. Again, we tried to help the weaker players feel comfortable so they could improve without feeling judged or self-conscious. It helped everyone have a good time. It made everything more fun to be in such a supportive environment, whether I was in a position as one of the more skilled (volleyball), or one of the less skilled (jumping or zip-lining into the water). We were all able to accomplish more, with less effort.</p>
<p>These experiences provide a good lesson that can be applied in a lot of places. Such a supportive environment would help any relationship, and any team. I&#8217;ve been on a couple really good software development teams, but I don&#8217;t think any of them have been as supportive as these two groups of strangers.</p>
<p>I&#8217;ve decided that this should be one of my goals as a team leader. I want to create an encouraging environment for the whole team. I want to make sure that everyone is comfortable enough that they feel like they can try things that are difficult, even if they might fail (as long as nobody gets hurt).</p>
<p>If a group of strangers can do this, so can your team. So can you and your significant others. We need to work every day to make sure that we&#8217;re supporting each other. It&#8217;s the best way to get everyone to achieve more.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/12/15/encouragement/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Show and Tell</title>
		<link>http://blog.boochtek.com/2015/11/24/show-and-tell</link>
		<comments>http://blog.boochtek.com/2015/11/24/show-and-tell#respond</comments>
		<pubDate>Wed, 25 Nov 2015 05:21:06 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=271</guid>
		<description><![CDATA[I&#8217;m wrapping up my current consulting gig at Mercy in December, and starting a new gig at CenturyLink. I&#8217;m a software developer, but that&#8217;s only a part of what I do. What I really do is join a team and help them improve the way they work — both their processes and their technical skills. I think &#8230; <a href="http://blog.boochtek.com/2015/11/24/show-and-tell" class="more-link">Continue reading<span class="screen-reader-text"> "Show and Tell"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I&#8217;m wrapping up my current consulting gig at Mercy in December, and starting a new gig at CenturyLink. I&#8217;m a software developer, but that&#8217;s only a part of what I do. What I really do is join a team and help them improve the way they work — both their processes and their technical skills.</p>
<p>I think this is a key differentiator for me as a consultant. Most consultants (and Agile coaches) come in and tell people what to do. I don&#8217;t like to just tell people what to do. I&#8217;d much prefer to work side-by-side with them, getting a better understanding of what their challenges are. Once I have a better understanding of the challenges, I&#8217;m able to better brainstorm some ideas to try. Then we can experiment to see what will work and what won&#8217;t.</p>
<p>Instead of telling people what to do, I show them how. Most people learn better from seeing than from hearing. They also learn better if you explain how and why, not just what. So showing them how to do something is more effective than telling them. By showing and doing, you can also set<span style="font-weight: 300;"> a good example. This is especially important when collaboration is a large part of what needs to be improved.</span></p>
<p>I&#8217;ve found that this style of consulting is more highly respected by everyone. I build trust with developers by working closely with them. Managers<span style="font-weight: 300;"> like to keep me around once they see how effective these methods can be, so the gigs I take on tend to last relatively long.</span></p>
<p>The biggest problem I have is explaining how this works. I don&#8217;t really know what to put on my résumé. Sometimes I call myself an Agile practitioner, and sometimes an Agile player/coach. But those aren&#8217;t terribly satisfying descriptions. I&#8217;m considering actually putting &#8220;I help teams improve the way they work — both their processes and their technical skills&#8221; on the résumé. But that seems awkward, and misses the show versus tell part. I&#8217;d be open to any suggestions.</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/11/24/show-and-tell/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Happiness Retrospective</title>
		<link>http://blog.boochtek.com/2015/11/09/happiness-retrospective</link>
		<comments>http://blog.boochtek.com/2015/11/09/happiness-retrospective#respond</comments>
		<pubDate>Tue, 10 Nov 2015 05:56:58 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>
		<category><![CDATA[Retrospectives]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=268</guid>
		<description><![CDATA[I facilitated a retrospective today; it was one of the best retros I&#8217;ve ever been involved with. I figured out what activities I wanted to do earlier in the morning. They were really quite simple. I wanted to focus on happiness. How happy are you at work? I started with two questions that I&#8217;ve used &#8230; <a href="http://blog.boochtek.com/2015/11/09/happiness-retrospective" class="more-link">Continue reading<span class="screen-reader-text"> "Happiness Retrospective"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I facilitated a retrospective today; it was one of the best retros I&#8217;ve ever been involved with. I figured out what activities I wanted to do earlier in the morning. They were really quite simple. I wanted to focus on happiness.</p>
<h2>How happy are you at work?</h2>
<p>I started with two questions that I&#8217;ve used with teams before, to some success (although not so successful for one particular team). The first question I asked was &#8220;How happy are you at work?&#8221; I had them put a rating from 0 to 10, with 0 meaning they should have quit last week, and 10 meaning they couldn&#8217;t imaging being happier at work.</p>
<p>The answers were mostly 7s and 8s, with a 5 and a 9. The average came to 7.5, which is pretty good. The 5 concerns me a bit, especially that it&#8217;s 2 points lower than anyone else&#8217;s answer.</p>
<h2>How effective do you think the teams is?</h2>
<p>The next question I asked was &#8220;How effective do you think the teams is?&#8221;. Again, from 0 to 10, with 0 meaning they can&#8217;t accomplish anything, and 10 meaning you couldn&#8217;t imagine a more effective team.</p>
<p>When I ask both of these questions, the scores are always highly correlated. If your team isn&#8217;t doing good work, it&#8217;ll make you unhappy. And if you are unhappy, you&#8217;re less likely to do your best work. This team was no different; the 5 and 9 became a 6 and a 10, and most of the 7s became 8s, for an average of just under 8.</p>
<h2>What makes you happy at work?</h2>
<p>The next question I asked was &#8220;What makes you happy at work?&#8221;. The answers were mostly about the teamwork and teammates. This went quicker than I expected. At this point, I was worried the retro would only last a little more than 30 minutes.</p>
<h2>What would make you happier at work?</h2>
<p>The final question I asked was &#8220;What would make you happier at work?&#8221;. This was the real pay-off. We spent about half an hour just talking about the things that would make us happier, and what we could do to improve our happiness. We came up with 10 potential action items. I usually limit teams to trying 3 or 4 action items, but most of the items are quite small, so we&#8217;re going to try 6 of them. One is just observing another team&#8217;s standup meetings, to see how they&#8217;re using their time effectively.</p>
<p>Everyone went away feeling that this was a really good retro. It felt good to focus on happiness. Happiness is something I&#8217;ve been talking a lot about on the This Agile Life podcast, and it felt good to take some action on it. I&#8217;ve done &#8220;positive-only&#8221; retros before, but this one felt even better than that, by specifically targeting happiness and how we can achieve it.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/11/09/happiness-retrospective/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Impromptu Retrospective</title>
		<link>http://blog.boochtek.com/2015/11/02/impromptu-retrospective</link>
		<comments>http://blog.boochtek.com/2015/11/02/impromptu-retrospective#respond</comments>
		<pubDate>Tue, 03 Nov 2015 03:44:44 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>
		<category><![CDATA[Retrospectives]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=265</guid>
		<description><![CDATA[I&#8217;m surprised that I haven&#8217;t gotten this story down in print before. It&#8217;s something I&#8217;ve mentioned many times — including a few times on the podcast. It&#8217;s a great story about the power of retrospectives, and it&#8217;s a great story about the power of a blameless post-mortem. I don&#8217;t recall all the specifics at this point. It was about 5 &#8230; <a href="http://blog.boochtek.com/2015/11/02/impromptu-retrospective" class="more-link">Continue reading<span class="screen-reader-text"> "Impromptu Retrospective"</span></a>]]></description>
				<content:encoded><![CDATA[<p>I&#8217;m surprised that I haven&#8217;t gotten this story down in print before. It&#8217;s something I&#8217;ve mentioned many times — including a few times on <a href="http://www.thisagilelife.com">the podcast</a>. It&#8217;s a great story about the power of retrospectives, and it&#8217;s a great story about the power of a blameless post-mortem.</p>
<p>I don&#8217;t recall all the specifics at this point. It was about 5 years ago. I&#8217;d just noticed that Arun had made some sort of mistake. That&#8217;s fine, people make mistakes. The thing that was different about his mistake was that I had made the same mistake about a week prior. And <a href="http://dirtyinformation.com">Amos</a> had made the same mistake about a week before that.</p>
<p>Noticing a pattern of mistakes, Amos and I called an impromptu retrospective. We gathered all the developers into a conference room. We explained the problem that we were running into. At first, Arun was defensive. That&#8217;s understandable; he thought we were there to come down on him, to lay blame. But we made it clear that we weren&#8217;t focusing on him. We admitted that we had also made the same mistake recently. We weren&#8217;t there to lay blame; we were there to figure out how our team could stop making the mistake. It took Arun a few minutes to get over the defensiveness.</p>
<p>With the defensiveness out of the way, we could focus on the issue at hand. We were able to figure out the root cause of us all making the mistake. (I don&#8217;t know if we played the &#8220;5 whys&#8221; game, but I&#8217;m sure we effectively did something similar.) And with that, we were able to change our process, so that nobody else would make the same mistake again.</p>
<p>There are 2 important points to this story. First, you don&#8217;t have to wait until a scheduled retrospective to hold a retrospective. This one was impromptu, and it&#8217;s the best one we ever had. We saw a problem, addressed it, and found a solution in less than an hour. Had we waited until the end of the week, we would have forgotten some of the details, and wouldn&#8217;t have been as effective at solving the problem. Second, when addressing problems, take your ego out of the equation. If you&#8217;re in a position of authority, take the blame — but never place blame. Focus on what&#8217;s important — solving the problem.</p>
<p>And don&#8217;t forget the Retrospective Prime Directive:</p>
<blockquote><p>Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.</p></blockquote>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/11/02/impromptu-retrospective/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>The Problem With Estimates</title>
		<link>http://blog.boochtek.com/2015/09/28/no-estimates</link>
		<comments>http://blog.boochtek.com/2015/09/28/no-estimates#comments</comments>
		<pubDate>Tue, 29 Sep 2015 03:39:41 +0000</pubDate>
		<dc:creator><![CDATA[Craig Buchek]]></dc:creator>
				<category><![CDATA[Agile]]></category>
		<category><![CDATA[Estimation]]></category>

		<guid isPermaLink="false">http://blog.boochtek.com/?p=261</guid>
		<description><![CDATA[I&#8217;m a big proponent of Agile (mostly XP; I&#8217;m mostly anti-Scrum) and I&#8217;ve contributed some to the #noestimates &#8220;movement&#8221;. I don&#8217;t really mean that nobody should ever estimate anything. I mean that I&#8217;ve never seen useful (fine-grained) estimates anywhere. Here are some of the problems with estimates that I&#8217;ve seen frequently: We&#8217;re not good at &#8230; <a href="http://blog.boochtek.com/2015/09/28/no-estimates" class="more-link">Continue reading<span class="screen-reader-text"> "The Problem With Estimates"</span></a>]]></description>
				<content:encoded><![CDATA[<div id="fhbody-76784315">
<div id="text-76784315">
<p>I&#8217;m a big proponent of Agile (mostly XP; I&#8217;m mostly anti-Scrum) and I&#8217;ve contributed some to the #noestimates &#8220;movement&#8221;.</p>
<p>I don&#8217;t really mean that nobody should ever estimate anything. I mean that I&#8217;ve never seen useful (fine-grained) estimates anywhere. Here are some of the problems with estimates that I&#8217;ve seen frequently:</p>
<ol>
<li>We&#8217;re not good at estimating how long things will take. We&#8217;re usually optimistic about how quickly we can get things done, and almost always miss thinking about things that will take more time. I&#8217;ve never seen a case where a project is completed more quickly than estimated. I&#8217;ve only rarely seen fine-grained (story-level) tasks completed more quickly than estimated.</li>
<li>Management asks for estimates and then treats them as deadlines. The team then learns to inflate their estimates. Then management learns to reduce the estimates they&#8217;re given. Given fudge factors in each direction, the estimate no longer has much reliability. Even if you&#8217;re using story points, the point inflation/deflation leads to less consistency and therefore reduced reliability.</li>
<li>Estimates that are given are negotiated down, or simply reduced. This leads to the question why you&#8217;d ask for an estimate and not take the answer provided. If you&#8217;re not going to listen to the answer, why are you asking the question? This is probably the craziest one on the list — given my first point, increasing an estimate would make sense. Reducing the estimates is just magical wishful thinking.</li>
<li>Plans change and work is added, but the deadline (presumably based on the estimates) is not changed to correspond with the extra work involved. So again, you&#8217;re not actually even using the estimates that were given.</li>
<li>Management dictates deadlines arbitrarily, without speaking to the people who will be doing the work. Spending time estimating how long each task will take when the deadline is already set is completely pointless.</li>
<li>Almost every deadline is complete bullshit, based on nothing. Often the excuse is that marketing needs to know when something will come out, so that they can let people know about it. Why they need to know the exact release date way in advance, I&#8217;ve never been able to figure out. Many people intuitively know that the deadlines are bullshit, and will likely be allowed to slip. The only exception to bullshit deadlines I&#8217;ve come across are regulatory deadlines. (I know there are a few other exceptions out there.)</li>
<li>Estimation at a fine-grained level isn&#8217;t necessary. Many Agile teams estimate using story points, and determine a conversion from story points to time based on previous empirical data. This is fine, except that the time spent estimating the story is wasted time — counting the number of stories almost always gives the same predictive power. Teams tend to get better at breaking up stories over time, so that they&#8217;re more consistent in size, so this becomes more likely over time.</li>
<li>The ultimate purpose of an estimate is to evaluate whether the proposed work will be profitable, and therefore worth doing. Or to compare the ROI (return on investment) between alternative projects. But to know that, you&#8217;ll have to know what value that work will provide. I don&#8217;t believe I&#8217;ve ever seen that done — at least not at a fine-grained level. Usually by the time you&#8217;re asked to estimate, the project has already gotten approval to proceed.</li>
</ol>
<p>I&#8217;ll note that most of these pit management against the team, instead of working together toward a common cause. Most of the practices also lead to seriously demoralizing the team. And most of the time, the estimates aren&#8217;t really even taken into account very much.</p>
<p>My advice is to first understand the value of a project before you consider estimating the costs. The estimation at this point will be very rough, so make sure that you have a very wide margin between the expected value and the rough estimate of the cost. If you&#8217;re pretty certain of the expected value, I&#8217;d probably want to make sure I could still be profitable even if it took 3 or 4 times as long to complete as the rough estimate. And if there&#8217;s uncertainty in the expected value, much more.</p>
<p>Another way to mitigate the risk of throwing money at something that&#8217;s not going to have positive ROI is to reduce the feedback loop. Order the work so that the tasks are ranked in order of value to the customer. (Realistically, you&#8217;ll have dependencies of tasks to worry about, and should consider effort involved too.) So work on the most valuable feature first — get that out into production as soon as possible. Once that&#8217;s done, you can assess if your ROI is positive or not. Keep iterating in this fashion, working on the features that will provide the most value first. Keep assessing your ROI, and stop when the ROI is no longer worth it, compared to other projects the team could be working on.</p>
<p>At a fine-grained level, if you&#8217;re using story points, I&#8217;d ask you to do the math to see if just counting the stories would be as effective at predicting how much will be done over time as using the story points. If so, you can save the time the team spends on estimating stories. I&#8217;d still recommend spending time talking about stories so that everyone has a shared understanding of what needs to be done, and to break stories up into a smaller, more manageable size — with one acceptance criteria per story. Also take a look to see if empirical average cycle time (how long it takes a single story to move from start to finish) might provide you the predictive power just as well as estimates. (I.e. is it bandwidth or latency that really provides the predictive power you&#8217;re looking for?)</p>
<p>And don&#8217;t forget Hofstadter&#8217;s Law: It always takes longer than you expect, even when you take into account Hofstadter&#8217;s Law.</p>
</div>
</div>
<footer>
<div></div>
</footer>
]]></content:encoded>
			<wfw:commentRss>http://blog.boochtek.com/2015/09/28/no-estimates/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
